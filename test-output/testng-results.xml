<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="13" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-07T15:10:41 IST" name="My Automation Suite" finished-at="2023-10-07T15:16:23 IST" duration-ms="341455">
    <groups>
    </groups>
    <test started-at="2023-10-07T15:10:41 IST" name="TutorialsNinja TestCases" finished-at="2023-10-07T15:16:23 IST" duration-ms="341455">
      <class name="com.policyBazar.qa.testcases.PhoneTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.PhoneTest@47d9a273]" started-at="2023-10-07T15:15:27 IST" name="setUp" finished-at="2023-10-07T15:15:34 IST" duration-ms="6868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyThePhoneForValidEnquiry()[pri:1, instance:com.policyBazar.qa.testcases.PhoneTest@47d9a273]" started-at="2023-10-07T15:15:34 IST" name="verifyThePhoneForValidEnquiry" finished-at="2023-10-07T15:15:55 IST" duration-ms="20280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePhoneForValidEnquiry -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.PhoneTest@47d9a273]" started-at="2023-10-07T15:15:55 IST" name="tearDown" finished-at="2023-10-07T15:15:56 IST" duration-ms="1211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.PhoneTest@47d9a273]" started-at="2023-10-07T15:15:56 IST" name="setUp" finished-at="2023-10-07T15:16:03 IST" duration-ms="6895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyThePhoneForBlankEnquiry()[pri:2, instance:com.policyBazar.qa.testcases.PhoneTest@47d9a273]" started-at="2023-10-07T15:16:03 IST" name="verifyThePhoneForBlankEnquiry" finished-at="2023-10-07T15:16:22 IST" duration-ms="19274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePhoneForBlankEnquiry -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.PhoneTest@47d9a273]" started-at="2023-10-07T15:16:22 IST" name="tearDown" finished-at="2023-10-07T15:16:23 IST" duration-ms="632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.policyBazar.qa.testcases.PhoneTest -->
      <class name="com.policyBazar.qa.testcases.Login">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:12:15 IST" name="setUp" finished-at="2023-10-07T15:12:23 IST" duration-ms="7947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:12:23 IST" name="verifyLoginWithValidCredentials" data-provider="ValidCredentialSupplier" finished-at="2023-10-07T15:12:32 IST" duration-ms="8890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[akshatachinake99@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:12:32 IST" name="tearDown" finished-at="2023-10-07T15:12:33 IST" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:12:33 IST" name="setUp" finished-at="2023-10-07T15:12:41 IST" duration-ms="7810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:12:41 IST" name="verifyLoginWithValidCredentials" data-provider="ValidCredentialSupplier" finished-at="2023-10-07T15:12:49 IST" duration-ms="8877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[priyankasunilkamble164@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:12:49 IST" name="tearDown" finished-at="2023-10-07T15:12:50 IST" duration-ms="873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:12:50 IST" name="setUp" finished-at="2023-10-07T15:13:09 IST" duration-ms="18962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:13:09 IST" name="verifyLoginWithValidCredentials" data-provider="ValidCredentialSupplier" finished-at="2023-10-07T15:13:18 IST" duration-ms="8967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yashkambale5685@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:13:18 IST" name="tearDown" finished-at="2023-10-07T15:13:19 IST" duration-ms="992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:13:19 IST" name="setUp" finished-at="2023-10-07T15:13:40 IST" duration-ms="20965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidCredentils()[pri:2, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:13:40 IST" name="verifyLoginWithInvalidCredentils" finished-at="2023-10-07T15:13:50 IST" duration-ms="10079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentils -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:13:50 IST" name="tearDown" finished-at="2023-10-07T15:13:51 IST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:13:51 IST" name="setUp" finished-at="2023-10-07T15:13:59 IST" duration-ms="7900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithBlankCredentils()[pri:3, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:13:59 IST" name="verifyLoginWithBlankCredentils" finished-at="2023-10-07T15:14:09 IST" duration-ms="9967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithBlankCredentils -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:14:09 IST" name="tearDown" finished-at="2023-10-07T15:14:09 IST" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:14:09 IST" name="setUp" finished-at="2023-10-07T15:14:17 IST" duration-ms="8002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidEmailIdandInvalidPassword()[pri:4, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:14:17 IST" name="verifyLoginWithValidEmailIdandInvalidPassword" finished-at="2023-10-07T15:14:28 IST" duration-ms="10027" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected and Actual Does Not Match expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected and Actual Does Not Match expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at com.policyBazar.qa.testcases.Login.verifyLoginWithValidEmailIdandInvalidPassword(Login.java:154)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailIdandInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:14:28 IST" name="tearDown" finished-at="2023-10-07T15:14:28 IST" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:14:28 IST" name="setUp" finished-at="2023-10-07T15:14:35 IST" duration-ms="7179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithINValidEmailIdandValidPassword()[pri:5, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:14:35 IST" name="verifyLoginWithINValidEmailIdandValidPassword" finished-at="2023-10-07T15:14:37 IST" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithINValidEmailIdandValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Login@54a7079e]" started-at="2023-10-07T15:14:37 IST" name="tearDown" finished-at="2023-10-07T15:14:37 IST" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.policyBazar.qa.testcases.Login -->
      <class name="com.policyBazar.qa.testcases.Search">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:14:37 IST" name="setUp" finished-at="2023-10-07T15:14:43 IST" duration-ms="6116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchWithValidProducts()[pri:1, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:14:43 IST" name="verifySearchWithValidProducts" finished-at="2023-10-07T15:14:53 IST" duration-ms="9919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithValidProducts -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:14:53 IST" name="tearDown" finished-at="2023-10-07T15:14:54 IST" duration-ms="692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:14:54 IST" name="setUp" finished-at="2023-10-07T15:15:00 IST" duration-ms="6352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchWithInValidProducts()[pri:2, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:15:00 IST" name="verifySearchWithInValidProducts" finished-at="2023-10-07T15:15:10 IST" duration-ms="9776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithInValidProducts -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:15:10 IST" name="tearDown" finished-at="2023-10-07T15:15:11 IST" duration-ms="716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:15:11 IST" name="setUp" finished-at="2023-10-07T15:15:17 IST" duration-ms="6196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchWithBlankInputs()[pri:3, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:15:17 IST" name="verifySearchWithBlankInputs" finished-at="2023-10-07T15:15:27 IST" duration-ms="9773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithBlankInputs -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Search@26e356f0]" started-at="2023-10-07T15:15:27 IST" name="tearDown" finished-at="2023-10-07T15:15:27 IST" duration-ms="723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.policyBazar.qa.testcases.Search -->
      <class name="com.policyBazar.qa.testcases.Register">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:10:41 IST" name="setUp" finished-at="2023-10-07T15:11:04 IST" duration-ms="23039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisterWithMandatoryFeilds()[pri:1, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:11:04 IST" name="verifyRegisterWithMandatoryFeilds" finished-at="2023-10-07T15:11:15 IST" duration-ms="11181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterWithMandatoryFeilds -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:11:15 IST" name="tearDown" finished-at="2023-10-07T15:11:16 IST" duration-ms="889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:11:16 IST" name="setUp" finished-at="2023-10-07T15:11:33 IST" duration-ms="16948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisterWithAllFeilds()[pri:2, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:11:33 IST" name="verifyRegisterWithAllFeilds" finished-at="2023-10-07T15:11:44 IST" duration-ms="10663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterWithAllFeilds -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:11:44 IST" name="tearDown" finished-at="2023-10-07T15:11:45 IST" duration-ms="738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:11:45 IST" name="setUp" finished-at="2023-10-07T15:12:02 IST" duration-ms="16980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisterWithBlankInputs()[pri:3, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:12:02 IST" name="verifyRegisterWithBlankInputs" finished-at="2023-10-07T15:12:13 IST" duration-ms="11723" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The Expected And Actual Does Not Match  expected [Last Name must be between 1 and 32 characters! ] but found [Last Name must be between 1 and 32 characters!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The Expected And Actual Does Not Match  expected [Last Name must be between 1 and 32 characters! ] but found [Last Name must be between 1 and 32 characters!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at com.policyBazar.qa.testcases.Register.verifyRegisterWithBlankInputs(Register.java:125)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterWithBlankInputs -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.policyBazar.qa.testcases.Register@f5acb9d]" started-at="2023-10-07T15:12:13 IST" name="tearDown" finished-at="2023-10-07T15:12:14 IST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.policyBazar.qa.testcases.Register -->
    </test> <!-- TutorialsNinja TestCases -->
  </suite> <!-- My Automation Suite -->
</testng-results>
